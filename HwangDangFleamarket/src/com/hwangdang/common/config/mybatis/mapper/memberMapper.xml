<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	<sql id="member-columns">
			member_id, member_password, member_name, member_phone, member_zipcode, member_address, member_sub_address, member_assign
	</sql>
	<sql id="select-basic">
		SELECT <include refid="member-columns"/> FROM MEMBER
	</sql>
	
	<resultMap type="member" id="member-basic-resultMap">
		<id column="member_Id" property="memberId"/>
		<result column="member_password" property="memberPassword"/>
		<result column="member_name" property="memberName"/>
		<result column="member_phone" property="memberPhone"/>
		<result column="member_zipcode" property="memberZipcode"/>
		<result column="member_address" property="memberAddress"/>
		<result column="member_sub_address" property="memberSubAddress"/>
		<result column="member_assign" property="memberAssign"/>
	</resultMap>

	
	
	<insert id="insert" parameterType="member">
		INSERT INTO MEMBER VALUES (#{memberId},#{memberPassword},#{memberName},#{memberPhone},#{memberZipcode},#{memberAddress},#{memberSubAddress},#{memberAssign})
	</insert>
	<update id="update" parameterType="member">
		UPDATE MEMBER
		SET 	member_password=#{memberPassword},
			   	member_name=#{memberName},
			   	member_phone=#{memberPhone},
			   	member_zipcode=#{memberZipcode},
			   	member_address=#{memberAddress},
			   	member_sub_address=#{memberSubAddress},
			   	member_assign=#{memberAssign}
		WHERE member_id=#{memberId}
	</update>
	<delete id="deleteById" parameterType="string">
		DELETE FROM MEMBER WHERE member_id=#{memberId}
	</delete>
	
	<!-- select -->
	<select id="selectById" parameterType="string" resultMap="member-basic-resultMap">
		<include refid="select-basic"/>
	
		WHERE member_id = #{memberId}
	</select>
	<!-- 전체 회원 select -->
	<select id="selectAll" resultType="member">
		<include refid="select-basic"/>
	</select>
	
	<!-- Select 페이징 처리 -->
	<select id="selectList" parameterType="map" resultType="member">
		SELECT <include refid="member-columns"/> 
		FROM(SELECT CEIL(rownum/#{itemPerPage}) page, <include refid="member-columns"/> 
			     FROM(SELECT <include refid="member-columns"/> 
					     FROM member order by id desc
					     )
				 )
		WHERE page = #{page}
	</select>
	
	<select id="selectMemberCount" resultType="_int">
		SELECT count(member_id) FROM MEMBER
	</select>
	<!-- 등록시 중복검사에서 사용해서 추가. -->
	<select id="selectCountById" parameterType="string" resultType="_int">
		SELECT count(member_id) FROM MEMBER WHERE member_id=#{memberId}
	</select>


</mapper>